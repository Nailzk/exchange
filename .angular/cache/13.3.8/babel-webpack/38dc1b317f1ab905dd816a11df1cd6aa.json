{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { DEFAULT_AMOUNT, DEFAULT_CURRENCIES, DEFAULT_FROM_CONVERT_CURRENCY, DEFAULT_TO_CONVERT_CURRENCY } from './constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"communication\";\nimport * as i3 from \"@ng-select/ng-select\";\nimport * as i4 from \"@angular/common\";\n\nfunction ExchangeComponent_ng_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", i_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i_r3);\n  }\n}\n\nfunction ExchangeComponent_ng_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", i_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i_r4);\n  }\n}\n\nfunction ExchangeComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"Getting exchange rate...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nlet ExchangeComponent = class ExchangeComponent {\n  constructor(_fb, _currenciesRepository) {\n    this._fb = _fb;\n    this._currenciesRepository = _currenciesRepository;\n    this.currencies = DEFAULT_CURRENCIES;\n    this.isLoading = false;\n    this.toConvertCurrency = DEFAULT_TO_CONVERT_CURRENCY;\n    this.fromConvertCurrency = DEFAULT_FROM_CONVERT_CURRENCY;\n    this._currencyRate = 0;\n  }\n\n  ngOnInit() {\n    this._initForm();\n\n    this._subscribeOnConvertToChanges();\n\n    this._subscribeOnConvertFromChanges();\n  }\n\n  handleCurrencyChanges() {\n    this._initCurrencies();\n  }\n\n  _initForm() {\n    this.form = this._fb.group({\n      convertFrom: [DEFAULT_AMOUNT, [Validators.required]],\n      convertTo: [null, [Validators.required]]\n    });\n\n    this._initCurrencies();\n  }\n\n  _initCurrencies() {\n    this.isLoading = true;\n    const {\n      convertFrom: amount\n    } = this.form.value;\n\n    this._currenciesRepository.getItem({\n      have: this.fromConvertCurrency,\n      want: this.toConvertCurrency,\n      amount\n    }).pipe(untilDestroyed(this)).subscribe({\n      next: res => this._handleResponse(res),\n      error: err => console.error(err),\n      complete: () => this.isLoading = false\n    });\n  }\n\n  _handleResponse(val) {\n    const {\n      new_amount: convertTo,\n      old_amount: convertFrom\n    } = val;\n    this._currencyRate = convertFrom / convertTo;\n    this.form.patchValue({\n      convertTo,\n      convertFrom\n    });\n  }\n\n  _subscribeOnConvertToChanges() {\n    var _a;\n\n    (_a = this.form.controls) === null || _a === void 0 ? void 0 : _a['convertTo'].valueChanges.pipe(untilDestroyed(this)).subscribe(val => {\n      const value = Number(val);\n      const convertFrom = Number(value * this._currencyRate).toFixed(2);\n      this.form.patchValue({\n        convertFrom\n      }, {\n        emitEvent: false\n      });\n    });\n  }\n\n  _subscribeOnConvertFromChanges() {\n    var _a;\n\n    (_a = this.form.controls) === null || _a === void 0 ? void 0 : _a['convertFrom'].valueChanges.pipe(untilDestroyed(this)).subscribe(val => {\n      const value = Number(val);\n      const convertTo = Number(value / this._currencyRate).toFixed(2);\n      this.form.patchValue({\n        convertTo\n      }, {\n        emitEvent: false\n      });\n    });\n  }\n\n};\n\nExchangeComponent.ɵfac = function ExchangeComponent_Factory(t) {\n  return new (t || ExchangeComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CurrenciesRepository));\n};\n\nExchangeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ExchangeComponent,\n  selectors: [[\"lib-exchange\"]],\n  decls: 25,\n  vars: 12,\n  consts: [[1, \"wrapper\"], [1, \"form\", 3, \"formGroup\"], [1, \"amount\"], [\"required\", \"\", \"formControlName\", \"convertFrom\"], [\"required\", \"\", \"formControlName\", \"convertTo\"], [1, \"drop-list\"], [1, \"select-item\"], [1, \"info\"], [3, \"ngModel\", \"clearable\", \"hideSelected\", \"searchable\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"exchange-rate\", 4, \"ngIf\"], [3, \"value\"], [1, \"exchange-rate\"]],\n  template: function ExchangeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\")(1, \"div\", 0)(2, \"header\");\n      i0.ɵɵtext(3, \"Currency Converter\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 1)(5, \"div\", 2)(6, \"p\");\n      i0.ɵɵtext(7, \"From\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"p\");\n      i0.ɵɵtext(11, \"To\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"div\", 6)(15, \"p\", 7);\n      i0.ɵɵtext(16, \"From\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"ng-select\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function ExchangeComponent_Template_ng_select_ngModelChange_17_listener($event) {\n        return ctx.fromConvertCurrency = $event;\n      })(\"ngModelChange\", function ExchangeComponent_Template_ng_select_ngModelChange_17_listener() {\n        return ctx.handleCurrencyChanges();\n      });\n      i0.ɵɵtemplate(18, ExchangeComponent_ng_option_18_Template, 2, 2, \"ng-option\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 6)(20, \"p\", 7);\n      i0.ɵɵtext(21, \"To\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"ng-select\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function ExchangeComponent_Template_ng_select_ngModelChange_22_listener($event) {\n        return ctx.toConvertCurrency = $event;\n      })(\"ngModelChange\", function ExchangeComponent_Template_ng_select_ngModelChange_22_listener() {\n        return ctx.handleCurrencyChanges();\n      });\n      i0.ɵɵtemplate(23, ExchangeComponent_ng_option_23_Template, 2, 2, \"ng-option\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(24, ExchangeComponent_div_24_Template, 2, 0, \"div\", 10);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngModel\", ctx.fromConvertCurrency)(\"clearable\", false)(\"hideSelected\", true)(\"searchable\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.currencies);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.toConvertCurrency)(\"clearable\", false)(\"hideSelected\", true)(\"searchable\", false);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.currencies);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName, i3.NgSelectComponent, i1.NgModel, i4.NgForOf, i3.NgOptionComponent, i4.NgIf],\n  styles: [\"section[_ngcontent-%COMP%]{display:flex;align-items:center;height:87%;justify-content:center}section[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]{width:370px;padding:30px;border-radius:7px;background:#fff;box-shadow:7px 7px 20px #0000000d}section[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   header[_ngcontent-%COMP%]{font-size:28px;font-weight:300;text-align:center}section[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   .drop-list[_ngcontent-%COMP%]{display:flex;margin-top:20px;align-items:center;justify-content:space-between}section[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   .amount[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:18px;margin-top:10px;margin-bottom:5px}section[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   .amount[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{height:50px;font-size:17px;padding:0 15px;border:1px solid #999;border-radius:10px;width:90%;outline:none;text-align:center;font-weight:500;transition:all .5s ease-in-out}section[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   .amount[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:hover{border:1px solid #675afe}section[_ngcontent-%COMP%]   .wrapper[_ngcontent-%COMP%]   .form[_ngcontent-%COMP%]   .amount[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:1px solid #675afe;padding:0 14px;box-shadow:#675afe59 0 5px 15px;outline:none}section[_ngcontent-%COMP%]   .exchange-rate[_ngcontent-%COMP%]{margin:10px 0}section[_ngcontent-%COMP%]   .btn-wrapper[_ngcontent-%COMP%]{margin-top:20px;display:flex;justify-content:center}  .ng-select .ng-select-container{padding:10px 20px;border-radius:10px;border:1px solid #f9f8fd;transition:all .5s ease-in-out}  .ng-select .ng-select-container:hover{border:1px solid #675afe;color:#675afe;cursor:pointer}  .ng-dropdown-panel .ng-dropdown-panel-items .ng-option{text-align:center;padding:10px;transition:all .5s ease-in-out}  .ng-dropdown-panel .ng-dropdown-panel-items .ng-option:hover{background-color:#f9f8fd;cursor:pointer;color:#675afe;transform:scale(1.01)}  .ng-dropdown-panel .scroll-host{background-color:#fff;border-radius:0 0 10px 10px}.info[_ngcontent-%COMP%]{margin-bottom:10px}\"]\n});\nExchangeComponent = __decorate([UntilDestroy()], ExchangeComponent);\nexport { ExchangeComponent };","map":null,"metadata":{},"sourceType":"module"}